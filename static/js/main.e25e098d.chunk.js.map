{"version":3,"sources":["profiles/components.js","lookup/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/lookup.js","tweets/buttons.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["UserLink","props","username","className","onClick","e","window","location","href","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","indexOf","onerror","message","send","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","action","is_following","follower_count","following_count","bio","preventDefault","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","ActionBtn","tweet","didPerformAction","likes","handleActionBackend","display","type","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","event","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","updateBackend","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.e25e098d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n\r\n  const handleUserLink = (e) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserLink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}\r\n      {hideLink === true ? (\r\n        `@${user.username}`\r\n      ) : (\r\n        <UserLink username={user.username}>@{user.username} </UserLink>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user, hideLink } = props;\r\n\r\n  return hideLink === true ? (\r\n    <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n      {user.username[0]}\r\n    </span>\r\n  ) : (\r\n    <UserLink username={user.username}>\r\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n        {user.username[0]}\r\n      </span>\r\n    </UserLink>\r\n  );\r\n}\r\n","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `https://shan-django-react-social-media.herokuapp.com/api${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  const csrftoken = getCookie(\"csrftoken\");\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\";\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  xhr.send(jsonData);\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nexport function DisplayCount(props) {\r\n  return (\r\n    <span className={props.className}>\r\n      {numeral(props.children).format(\"0a\")}\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport { DisplayCount } from \"./utils\";\r\n\r\nfunction ProfileBadge(props) {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let action = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  action = profileLoading ? \"Loading\" : action;\r\n\r\n  const handleFollowToggle = (e) => {\r\n    e.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(action);\r\n    }\r\n  };\r\n\r\n  return user ? (\r\n    <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p>\r\n        <UserDisplay user={user} includeFullName hideLink />\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.follower_count}</DisplayCount>{\" \"}\r\n        {user.follower_count === 1 ? \"follower\" : \"followers\"}\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following\r\n      </p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n      <button onClick={handleFollowToggle} className=\"btn btn-primary\">\r\n        {action}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  // lookup\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n\r\n  const handleNewFollow = (actionVerb) => {\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response);\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n    setProfileLoading(true);\r\n  };\r\n  return didLookup === false ? (\r\n    \"Loading...\"\r\n  ) : profile ? (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  ) : null;\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  backendLookup(\"GET\", `/profiles/${username}/`, callback);\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n  const data = { action: `${action && action}`.toLowerCase() };\r\n  backendLookup(\"POST\", `/profiles/${username}/follow/`, callback, data);\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\";\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\r\n      \"https://shan-django-react-social-media.herokuapp.com/api\",\r\n      \"\"\r\n    );\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\";\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`;\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\r\n      \"https://shan-django-react-social-media.herokuapp.com/api\",\r\n      \"\"\r\n    );\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action, didPerformAction } = props;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n\r\n  const handleActionBackend = (response, status) => {\r\n    if ((status === 200 || 201) && didPerformAction) {\r\n      didPerformAction(response, status);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    apiTweetAction(tweet.id, action.type, handleActionBackend);\r\n  };\r\n\r\n  const display =\r\n    action.type === \"like\"\r\n      ? `${likes} ${likes === 1 ? \"Like\" : \"Likes\"}`\r\n      : action.display;\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nimport { UserDisplay, UserPicture } from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet\r\n      isRetweet\r\n      retweeter={props.retweeter}\r\n      hideActions\r\n      className={\" \"}\r\n      tweet={tweet.parent}\r\n    />\r\n  ) : null;\r\n}\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweet via <UserDisplay user={retweeter} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n\r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {isDetail === true ? null : (\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={handleLink}\r\n              >\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetList } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n\r\n  const updateBackend = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    //backend api request\r\n    e.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    apiTweetCreate(newVal, updateBackend);\r\n\r\n    //clear text box\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        }\r\n      };\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { TweetCreate } from \"./create\";\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { FeedList } from \"./feed\";\r\nimport { TweetsList } from \"./list\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const { tweetId } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : (\r\n    <Tweet tweet={tweet} className={props.className} />\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { TweetsComponent } from \"./tweets\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ProfileBadgeComponent } from \"./profiles\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailEl = document.querySelectorAll(\".tweetme-detail\");\ntweetDetailEl.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\nconst userProfileBadgeEl = document.querySelectorAll(\".tweetme-profile-badge\");\nuserProfileBadgeEl.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}