{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","handleActionBackend","display","type","onClick","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","event","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","updateBackend","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.162a7b83.chunk.js","sourcesContent":["function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  const csrftoken = getCookie(\"csrftoken\");\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\";\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  xhr.send(jsonData);\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\";\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\";\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`;\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action, didPerformAction } = props;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n\r\n  const handleActionBackend = (response, status) => {\r\n    if ((status === 200 || 201) && didPerformAction) {\r\n      didPerformAction(response, status);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    apiTweetAction(tweet.id, action.type, handleActionBackend);\r\n  };\r\n\r\n  const display =\r\n    action.type === \"like\"\r\n      ? `${likes} ${likes === 1 ? \"Like\" : \"Likes\"}`\r\n      : action.display;\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n\r\n  const handleUserLink = (e) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserLink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}\r\n      <UserLink username={user.username}> @{user.username} </UserLink>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user } = props;\r\n  return (\r\n    <UserLink username={user.username}>\r\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n        {user.username[0]}\r\n      </span>\r\n    </UserLink>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nimport { UserDisplay, UserPicture } from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet\r\n      isRetweet\r\n      retweeter={props.retweeter}\r\n      hideActions\r\n      className={\" \"}\r\n      tweet={tweet.parent}\r\n    />\r\n  ) : null;\r\n}\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweet via <UserDisplay user={retweeter} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n\r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {isDetail === true ? null : (\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={handleLink}\r\n              >\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetList } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n\r\n  const updateBackend = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    //backend api request\r\n    e.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    apiTweetCreate(newVal, updateBackend);\r\n\r\n    //clear text box\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        }\r\n      };\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { TweetCreate } from \"./create\";\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { FeedList } from \"./feed\";\r\nimport { TweetsList } from \"./list\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const { tweetId } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : (\r\n    <Tweet tweet={tweet} className={props.className} />\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { TweetsComponent } from \"./tweets\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailEl = document.querySelectorAll(\".tweetme-detail\");\ntweetDetailEl.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}